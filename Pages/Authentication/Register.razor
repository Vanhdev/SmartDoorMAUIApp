@page "/register"
@layout AuthLayout
@using System.ComponentModel.DataAnnotations
@inject Microsoft.AspNetCore.Components.NavigationManager navigation
@inject Services.UserService userService

<MudContainer MaxWidth="MaxWidth.Small">
    <h3>Đăng kí</h3>

    <EditForm Model="@model" OnValidSubmit="OnSubmit">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Tên đăng nhập" HelperText="Tối đa 8 kí tự"
                @bind-Value="model.Username" For="@(() => model.Username)" />
                <MudTextField Label="Email" Class="mt-3" HelperText="Nhập email"
                @bind-Value="model.Email" For="@(() => model.Email)" />
                <MudTextField Label="Mật khẩu" HelperText="Nhập mật khẩu mạnh" Class="mt-3"
                @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                <MudTextField Label="Xác nhận mật khẩu" HelperText="Xác nhận lại mật khẩu" Class="mt-3"
                @bind-Value="model.Password2" For="@(() => model.Password2)" InputType="InputType.Password" />
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Đăng kí</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
</MudContainer>
@code {
    RegisterAccountForm model = new RegisterAccountForm();

    public class RegisterAccountForm
    {
        [Required(ErrorMessage = "Tên đăng nhập là bắt buộc")]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Email là bắt buộc")]
        [EmailAddress]
        public string Email { get; set; }

        [Required(ErrorMessage = "Mật khẩu là bắt buộc")]
        [StringLength(30, ErrorMessage = "Mật khẩu dài tối thiểu 8 kí tự", MinimumLength = 8)]
        public string Password { get; set; }

        [Required(ErrorMessage = "Bắt buộc xác nhận mật khẩu")]
        [Compare(nameof(Password))]
        public string Password2 { get; set; }

    }


    private async Task OnSubmit(EditContext context)
    {
        Data.User user = new();
        user.UserName = model.Username;
        user.Password = model.Password;

        var res  = await userService.Insert(user);
        if (res == 1) {
            await App.Current.MainPage.DisplayAlert("Register success", $"Your account has been created successfully.\nPlease, login!", "OK");
            navigation.NavigateTo("/login");
        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Register fail", $"An error has been occur during registration.\nPlease, register again!", "OK");
            this.StateHasChanged();
        }
    }
}

